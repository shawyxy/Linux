// #include <stdio.h>
// #include <stdlib.h>
// int main()
// {
//   for(int i = 0; i < 150; i++)
//   {
//   printf("%d:%s\n", i, strerror(i));
//   }
//   return 0;                                                                 
// }
// #include <stdio.h>
// #include <stdlib.h>
// void show()
// {
//   printf("hello world");
//   exit(0);
// }
// int main()
// {
//   show();
//   return 0;
// }
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
int main()
{
    pid_t id = fork();
    if(id == 0)//子进程创建成功
    {
        int count = 5;
        while(count--)
        {
            printf("子进程：PID：%d, PPID:%d\n", getpid(), getppid());
            sleep(1);
        }
        exit(99);
    }
    //父进程
    int status = 0;//定义一个status参数，等下传入wait中后再提取
    pid_t ret = wait(&status);
    if(ret > 0)//wait子进程退出成功，返回它的pid
    {
        printf("等待子进程退出成功\n");
        if(WIFEXITED(status))//如果是正常退出，条件为真
        {
            printf("子进程退出码：%d\n", WEXITSTATUS(status));
        }
    }
    return 0;
}
